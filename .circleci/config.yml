version: 2.0
jobs: 
  tests:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - checkout
      - run:   
          working_directory: ~/project/WebApplication/TenantApplication
          name: Restore packages
          command: 
            dotnet restore            
      - run:
          working_directory: ~/project/WebApplication/TenantApplication
          name: Build App
          command: 
            dotnet build

      - run:
          working_directory: ~/project/WebApplication/TenantApplication.Tests
          name: App Tests
          command:
            dotnet test

  docker-build:
    machine: true
    steps:
      - checkout
      - add_ssh_keys:
            fingerprints:
              - "27:eb:cd:ff:4e:9f:18:06:9a:aa:3e:7f:e8:ff:a0:f5"
      # - run:
      #     name: Build Docker
      #     working_directory: ~/project/WebApplication
      #     command: |
      #       docker build . -t $DOCKER_LOGIN/$IMAGE_NAME:$TAG -f TenantApplication/Dockerfile
      # - run: 
      #     name: Push Docker image
      #     command: |
      #       echo $DOCKER_PWD | docker login --username $DOCKER_LOGIN --password-stdin 
      #       docker push $DOCKER_LOGIN/$IMAGE_NAME:$TAG
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Start container and verify it is working
          working_directory: ~/project/WebApplication
          command: |
            docker-compose -f "docker-compose.yml" -f "docker-compose.prod.yml" up -d

      - run:
          name: Start docker-compose on the server
          working_directory: ~/project/DeploySctipts
          command: |
            scp deploy_app.sh root@77.73.69.188:/bin/docker_config_bash
            ssh -o StrictHostKeyChecking=no root@77.73.69.188 "/bin/docker_config_bash/./deploy_app.sh"

workflows:
  version: 2
  tests-build_deploy:
    jobs:
      - tests
      - docker-build